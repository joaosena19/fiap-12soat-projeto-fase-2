# Nome do workflow que aparecerá na aba "Actions" do GitHub
name: Validar Pull Request (Build e Teste)

# Gatilho: acionado em todo pull request para a branch 'main'
on:
  pull_request:
    branches: [ "main" ]

jobs:
  # O nome do nosso job. É este nome que usaremos na regra de proteção.
  build-and-test:
    # O workflow rodará em uma máquina virtual Linux (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      # 1. Clona o código do seu repositório para a máquina virtual
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2. Configura o ambiente .NET (ajuste a versão se seu projeto for diferente)
      - name: Configurar .NET 9.0
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      # 3. Encontra o arquivo da Solution (.sln) dinamicamente
      - name: Encontrar arquivo da Solution (.sln)
        id: find_sln
        # Procura pelo primeiro arquivo .sln no repositório e armazena o caminho
        run: echo "sln_path=$(find . -name '*.sln' -print -quit)" >> $GITHUB_OUTPUT
        
      # 4. Restaura as dependências NuGet da solução
      - name: Restaurar dependências
        # Usa o caminho da solution encontrado no passo anterior
        run: dotnet restore ${{ steps.find_sln.outputs.sln_path }}

      # 5. Builda a solução em modo Release para garantir que compila
      - name: Buildar a aplicação
        run: dotnet build ${{ steps.find_sln.outputs.sln_path }} --no-restore --configuration Release

      # 6. Roda todos os projetos de teste da solução
      - name: Rodar testes unitários
        run: dotnet test ${{ steps.find_sln.outputs.sln_path }} --no-build --verbosity normal

