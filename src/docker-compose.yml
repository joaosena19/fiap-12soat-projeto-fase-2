services:
  minha-api:
    container_name: oficina_api_service
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # Database Configuration using new nested structure
      - DatabaseConnection__Host=${DatabaseConnection__Host}
      - DatabaseConnection__Port=${DatabaseConnection__Port}
      - DatabaseConnection__DatabaseName=${DatabaseConnection__DatabaseName}
      - DatabaseConnection__User=${DatabaseConnection__User}
      - DatabaseConnection__Password=${DatabaseConnection__Password}
      # JWT Configuration
      - Jwt__Key=${Jwt__Key}
      - Jwt__Issuer=${Jwt__Issuer}
      - Jwt__Audience=${Jwt__Audience}
      # API Credentials
      - ApiCredentials__ClientId=${ApiCredentials__ClientId}
      - ApiCredentials__ClientSecret=${ApiCredentials__ClientSecret}
    depends_on:
      postgres_db:
        condition: service_healthy

  postgres_db:
    image: postgres:16-alpine
    container_name: oficina_mecanica_postgres_db
    environment:
      # Uses variables from .env file for PostgreSQL configuration
      POSTGRES_DB: ${DatabaseConnection__DatabaseName}
      POSTGRES_USER: ${DatabaseConnection__User}
      POSTGRES_PASSWORD: ${DatabaseConnection__Password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Uses variables from .env file for consistency
      test: ["CMD-SHELL", "pg_isready -U ${DatabaseConnection__User} -d ${DatabaseConnection__DatabaseName}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data: