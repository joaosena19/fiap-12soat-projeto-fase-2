services:
  minha-api:
    container_name: oficina_api_service
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "5001:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:8080
      # Lê do .ENV e passa como variáveis de ambiente (substituindo o appSettings.json)
      - ConnectionStrings__DefaultConnection=${DB_CONNECTION_STRING}
      - Jwt__Key=${JWT_KEY}
      - ApiCredentials__ClientId=${API_CLIENT_ID}
      - ApiCredentials__ClientSecret=${API_CLIENT_SECRET}
    depends_on:
      postgres_db:
        condition: service_healthy

  postgres_db:
    image: postgres:16-alpine
    container_name: oficina_mecanica_postgres_db
    environment:
      # Lê do .ENV e passa direto pra imagem do Postgres
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      # Usa as variáveis também no healthcheck para manter a consistência
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data: